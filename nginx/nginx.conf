events { }

http {
    include /etc/nginx/mime.types;

    server {
        listen 80;
        server_name msg.mjsec.kr www.msg.mjsec.kr;

        # HTTP -> HTTPS 자동 리디렉트
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name msg.mjsec.kr www.msg.mjsec.kr;

        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/msg.mjsec.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/msg.mjsec.kr/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 프론트엔드 (React)
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 백엔드 (Spring Boot)
        location /api/ {
            proxy_pass http://backend:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 디스코드 봇 (Flask)
        location /bot/ {
            proxy_pass http://discord-bot:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
