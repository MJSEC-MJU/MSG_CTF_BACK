version: "3.8"

services:
  redis:
    image: redis:7.0
    container_name: ctf-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ctf-network

  db:
    image: mysql:8.0
    container_name: ctf-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ctf-network

  backend:
    image: ${DOCKER_HUB_USERNAME}/backend:latest
    container_name: ctf-backend
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: local
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_SECURITY_USER_NAME: ${SPRING_SECURITY_USER_NAME}
      SPRING_SECURITY_USER_PASSWORD: ${SPRING_SECURITY_USER_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      GMAIL_USERNAME: ${GMAIL_USERNAME}
      GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD}
      API_KEY: ${API_KEY}
      BUCKET: ${BUCKET}
      LOCATION: ${LOCATION}
      PROJECT_ID: ${PROJECT_ID}
      # 컨테이너 내부에서 인증 JSON 파일의 경로를 지정합니다.
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/gcp_service_account.json
    # CD 파이프라인에서 업로드한 파일을 컨테이너에 마운트합니다.
    volumes:
      - /home/ubuntu/app/gcp_service_account.json:/secrets/gcp_service_account.json:ro
    networks:
      - ctf-network

  nginx:
    image: ${DOCKER_HUB_USERNAME}/nginx:latest
    container_name: ctf-nginx
    depends_on:
      - backend
    ports:
      - "443:443"
    volumes:
      - /home/ubuntu/app/nginx/conf.d:/etc/nginx/conf.d:ro
      - /home/ubuntu/app/nginx/ssl:/etc/letsencrypt/live/msg.mjsec.kr:ro
    networks:
      - ctf-network

  frontend:
    image: ${DOCKER_HUB_USERNAME}/frontend:latest
    container_name: ctf-frontend
    expose:
      - "80"
    networks:
      - ctf-network

  test:
    image: gradle:8.1.1-jdk17
    container_name: ctf-test
    working_dir: /app
    volumes:
      - ./Back:/app
      - gradle_cache:/home/gradle/.gradle
    environment:
      SPRING_PROFILES_ACTIVE: local
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_SECURITY_USER_NAME: ${SPRING_SECURITY_USER_NAME}
      SPRING_SECURITY_USER_PASSWORD: ${SPRING_SECURITY_USER_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["sh", "-c"]
    command: ["./gradlew test --stacktrace"]
    networks:
      - ctf-network

volumes:
  gradle_cache:

networks:
  ctf-network:
    driver: bridge
