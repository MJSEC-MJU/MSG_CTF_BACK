name: Backend CD

on:
  push:
    branches:
      - feature/nginx-backend-cd  
  workflow_dispatch:  # GitHub Actions에서 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Backend Image to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest -f dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest

      - name: Upload docker-compose.yml to Server
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/app"  # 원격 서버에서 docker-compose.yml 파일을 위치시킬 디렉토리

      - name: Deploy to GCP Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/ubuntu/app  # docker-compose.yml 파일이 있는 디렉토리로 이동
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
            sudo docker-compose up -d backend
            sudo docker image prune -f
